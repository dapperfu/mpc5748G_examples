/*!
    @page hsm_freertos_mpc5748g_group HSM MPC5748G
    @brief Demo application showing the HSM functionalities

    ## Application description ##
    _____
    The purpose of this demo application is to show you the usage of the HSM module from the MPC5748G CPU using the S32 SDK API.
     - In the first part, the application will setup 2 Tasks.
     - TASK0 initializes the HSM module.
     - After a defined period of time, TASK0 sends a message to TASK1, which contains a message in 3 states: no encyption, ECB encryption and CBC encryption.
     - TASK1 receives the message from TASK0 and decrypts the message based on the used encryption; the decrypted message is then sent to the console using UART over LINFlexD.

    If no errors occur, the following messages should be displayed to the console repeatedly:<br/>
    <b><i>AES ECB Encryption/Decryption OK<br/>
     AES CBC Encryption/Decryption OK</i></b><br/>

    ## Prerequisites ##
    _____
    To run the example you will need to have the following items:
    - 1 MPC5748G board (validation board / EVB)
    - 1 Power Adapters 12V (only for validation board, EVB is powered through OpenSDA USB connection)
    - 1 microUSB cable (for EVB) / 1 USB type B cable (for validation board)
    - 1 Personal Computer
    - 1 PEmicro Debugger (for validation board, OpenSDA used for EVB)

    ## Boards supported ##
    _____
    The following boards are supported by this application:
    - DEVKIT-MPC5748G
    - MPC574xG-MB

    ## Hardware Wiring ##
    _____
    No pin connections are needed for this application; it uses LINFlexD instance 2, which is internally connected to the serial-to-USB module on the board.
    For validation board, the USB type-B cable must be connected to P17 port, while for EVB the uUSB cable will be connected to J1 OpenSDA connector.
    A terminal interface (termite/putty etc) needs to be opened on the host computer and connected to the USB port communicating with the board.

    ## How to run ##
    _____
    #### 1. Importing the project into the workspace ####
    After opening S32 Design Studio, go to \b File -> \b New \b S32DS \b Project \b From... and select \b hsm_freertos_mpc5748g. Then click on \b Finish. \n
    The project should now be copied into you current workspace.
    #### 2. Generating the Processor Expert configuration ####
    First go to \b Project \b Explorer View in S32 DS and select the current project(\b hsm_freertos_mpc5748g). Then go to \b Project and click on \b Generate \b Processor \b Expert \b Code \n
    Wait for the code generation to be completed before continuing to the next step.
    #### 3. Building the project ####
    Select the configuration to be built \b FLASH (Debug_FLASH) or \b RAM (Debug_RAM) by left clicking on the downward arrow corresponding to the \b build button(@image hammer.png).
    Wait for the build action to be completed before continuing to the next step.
    #### 4. Running the project ####
    Go to \b Run and select \b Debug \b Configurations. There will be four debug configurations for this project:
     Configuration Name | Description
     -------------------|------------
     \b hsm_freertos_mpc5748g_debug_ram_pemicro | Debug the RAM configuration using PEMicro debuggers
     \b hsm_freertos_mpc5748g_debug_flash_pemicro | Debug the FLASH configuration using PEMicro debuggers
     \n Select the desired debug configuration and click on \b Launch. Now the perspective will change to the \b Debug \b Perspective. \n
    Use the controls to control the program flow.

    @note For more detailed information related to S32 Design Studio usage please consult the available documentation.

    ## Notes ##
    ______

    For this example it is necessary to open a terminal emulator and configure it with:
    -   9600 baud
    -   One stop bit
    -   No parity
    -   No flow control
*/
