/*!
    @page power_mode_switch_mpc5748g_group POWER_MANAGER MPC5748G
    @brief Example application showing the usage of the POWER_MANAGER module

    ## Application description ##
    ______
    The purpose of the application is to show the user how to enter various power modes of the MPC5748G SoC using the S32 SDK API.

    The application displays on the host PC terminal a menu in which the user can select to enter:

    - SAFE
    - DRUN
    - RUN0
    - RUN1
    - RUN2
    - RUN3
    - STOP
    - STANDBY
    When user selects a mode, PC terminal will show result successfully or unsuccessfully.
    ## Prerequisites ##
    ______
    The run the example you will need to have the following items:
    - 1 MPC5748G board
    - 1 Power Adapter 12V (if the board cannot be powered from the USB port)
    - 1 Personal Computer
    - 1 PEMicro Debugger (optional, users can use Open SDA)

    ## Boards supported ##
    ______
    The following boards are supported by this application:
    - MPC574xG-MB
    - DEVKIT - MPC5748G

    ## Hardware Wiring ##
    ______
    No pin connections are needed for this application; it uses LINFlexD instance 2, which is internally connected to the serial-to-USB module on the board.
    For validation board, the USB type-B cable must be connected to P17 port, while for EVB the uUSB cable will be connected to J1 OpenSDA connector.
    A terminal interface (termite/putty etc) needs to be opened on the host computer and connected to the USB port communicating with the board.

    ## How to run ##
    ______

    #### 1. Importing the project into the workspace ####
    After opening S32 Design Studio, go to \b File -> \b New \b S32DS \b Project \b From... and select \b power_mode_switch_mpc5748g. Then click on \b Finish. \n
    The project should now be copied into you current workspace.
    #### 2. Generating the Processor Expert configuration ####
    First go to \b Project \b Explorer View in S32 DS and select the current project(\b power_mode_switch_mpc5748g). Then go to \b Project and click on \b Generate \b Processor \b Expert \b Code \n
    Wait for the code generation to be completed before continuing to the next step.
    #### 3. Building the project ####
    Select the configuration to be built \b FLASH (Debug_FLASH) or \b RAM (Debug_RAM) by left clicking on the downward arrow corresponding to the \b build button(@image hammer.png).
    Wait for the build action to be completed before continuing to the next step.
    #### 4. Running the project ####
    Go to \b Run and select \b Debug \b Configurations. There will be two debug configurations for this project:
     Configuration Name | Description
     -------------------|------------
     \b power_mode_switch_mpc5748g_debug_ram_pemicro | Debug the RAM configuration using PEMicro debuggers
     \b power_mode_switch_mpc5748g_debug_flash_pemicro | Debug the FLASH configuration using PEMicro debuggers
    \n Select the desired debug configuration and click on \b Launch. Now the perspective will change to the \b Debug \b Perspective. \n
    Use the controls to control the program flow.
    - Do not run with debug when user switches STOP0 or STANDBY0 mode.
    - When CPU execute code from Ram, CPU can not enter STOP0 and STANDBY0 mode

    @note For more detailed information related to S32 Design Studio usage please consult the available documentation.
    - 9600 baud
    - One stop bit
    - No parity
    - No flow control
    - '\\n' line ending
*/
