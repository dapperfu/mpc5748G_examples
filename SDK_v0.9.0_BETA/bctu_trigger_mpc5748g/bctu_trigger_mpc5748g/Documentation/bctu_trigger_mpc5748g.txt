=============================================================================
List of generated methods in project: bctu_trigger_mpc5748g

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "intMan1"   (component interrupt_manager)
   - intMan1_INT_SYS_InstallHandler -Installs an interrupt handler routine for 
                a given IRQ number.
   - intMan1_INT_SYS_EnableIRQ -Enables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_DisableIRQ -Disables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQGlobal -Enables system interrupt.
   - intMan1_INT_SYS_DisableIRQGlobal -Disable system interrupt.
   - intMan1_INT_SYS_SetPriority -Set Interrupt Priority.
   - intMan1_INT_SYS_GetPriority -Get Interrupt Priority.
   - intMan1_INT_SYS_SetSoftwareIRQRequest -Set software interrupt request.
   - intMan1_INT_SYS_ClearSoftwareIRQRequest -Clear software interrupt request.
   - intMan1_INT_SYS_EnableIRQ_MC -Enables an interrupt for a given IRQ number, 
                on the given cores.
   - intMan1_INT_SYS_GetCoresForIRQ -Gets the cores on which an interrupt for 
                the specified IRQ number is enabled.
   - intMan1_INT_SYS_DisableIRQ_MC -Disables an interrupt for a given IRQ 
                number, on the given cores.
   - intMan1_INT_SYS_DisableIRQ_MC_All -Disables an interrupt for a given IRQ 
                number, on all cores.

Module "adConv1"   (component adc_c55)
   - adConv1_ADC_DRV_GetDefaultConfigConverter -Initializes the converter 
                configuration structure.
   - adConv1_ADC_DRV_ConfigConverter -Configures the converter with the given 
                configuration structure.
   - adConv1_ADC_DRV_ChainConfig -Configures the converter chains the given 
                configuration structure.
   - adConv1_ADC_DRV_Reset -Reset the ADC.
   - adConv1_ADC_DRV_EnableChannel -Enable a channel.
   - adConv1_ADC_DRV_DisableChannel -Disable a channel.
   - adConv1_ADC_DRV_StartConversion -Start conversion.
   - adConv1_ADC_DRV_GetStatusFlags -Get the status flags.
   - adConv1_ADC_DRV_ClearStatusFlags -Clear the status flags.
   - adConv1_ADC_DRV_GetConvResultsToArray -Get conversion results for a 
                conversion chain.
   - adConv1_ADC_DRV_DoCalibration -Perform Calibration of the ADC.
   - adConv1_ADC_DRV_Powerup -Power up the ADC.
   - adConv1_ADC_DRV_Powerdown -Power down the ADC.
   - adConv1_ADC_DRV_EnableInterrupts -Enable ADC interrupts.
   - adConv1_ADC_DRV_DisableInterrupts -Disable ADC interrupts.
   - adConv1_ADC_DRV_EnableChannelInterrupt -Enable ADC interrupt for a channel.
   - adConv1_ADC_DRV_DisableChannelInterrupt -Disable ADC interrupt for a 
                channel.
   - adConv1_ADC_DRV_SetPresamplingSource -Set the Presampling Source for the 
                channel group.
   - adConv1_ADC_DRV_EnableChannelPresampling -Enable Presampling on one 
                channel.
   - adConv1_ADC_DRV_DisableChannelPresampling -Disable Presampling on one 
                channel.
   - adConv1_ADC_DRV_EnablePresampleConversion -Enable Conversion Presampled 
                Data.
   - adConv1_ADC_DRV_DisablePresampleConversion -Disable Conversion of 
                Presampled Data.
   - adConv1_ADC_DRV_EnableDma -Enable DMA Requests.
   - adConv1_ADC_DRV_DisableDma -Disable DMA Requests.
   - adConv1_ADC_DRV_EnableChannelDma -Enable DMA on one channel.
   - adConv1_ADC_DRV_DisableChannelDma -Disable DMA on one channel.
   - adConv1_ADC_DRV_SetDmaClearSource -Set DMA Request Clear Source.
   - adConv1_ADC_DRV_GetConvInfoToArray -Get conversion results for a 
                conversion chain with extended information.
   - adConv1_ADC_DRV_AbortConversion -Abort ongoing conversion.
   - adConv1_ADC_DRV_AbortChain -Abort ongoing chain conversion.

Module "bctu1"     (component bctu)
   - bctu1_BCTU_DRV_Config -Configure global functionalities of a BCTU instance.
   - bctu1_BCTU_DRV_GetDefaultConfig -Get the default configuration for BCTU.
   - bctu1_BCTU_DRV_Reset -Reset the BCTU registers to default values.
   - bctu1_BCTU_DRV_WriteGlobalTriggerEn -Set the state of the Global Trigger 
                Enable flag.
   - bctu1_BCTU_DRV_SetLowPowerMode -Set the BCTU operating mode: normal or low 
                power.
   - bctu1_BCTU_DRV_GetStatusFlag -Get the value of a selected BCTU status flag,
                for a selected ADC instance.
   - bctu1_BCTU_DRV_ClearStatusFlag -Clear a selected BCTU status flag, for a 
                selected ADC instance.
   - bctu1_BCTU_DRV_ClearAllStatusFlags -Clears all the BCTU status flags, for 
                a selected ADC instance. Also clears all common flags, i.e. 
                TRGF.
   - bctu1_BCTU_DRV_ResetTrigger -Resets the trigger register associated with a 
                trigger index.
   - bctu1_BCTU_DRV_ConfigTriggerSingle -Configures a trigger configuration 
                register for an individual (non-list) conversion.
   - bctu1_BCTU_DRV_IsConvRunning -Check if there is an active conversion 
                triggered by the selected trigger index.
   - bctu1_BCTU_DRV_EnableHwTrigger -Clears any eventual pending hw input 
                signals already occurred on the selected trigger and enables 
                new occurrences of the hw input signals to start new 
                conversions.
   - bctu1_BCTU_DRV_DisableHwTrigger -Prevent the selected BCTU trigger to 
                start new conversions on the occurrence of an external input 
                signal or new conversions in an on-going conversion loop (loop 
                flag enabled).
   - bctu1_BCTU_DRV_StopLoopConversions -Stop a series of loop conversions 
                initiated by the selected BCTU trigger.
   - bctu1_BCTU_DRV_ConfigTriggerList -Configures a trigger configuration 
                register for a list of conversions.
   - bctu1_BCTU_DRV_SetConvListArray -Set an array of adc channel numbers in 
                the conversion list.
   - bctu1_BCTU_DRV_SwTriggerConv -Triggers a conversion or list of conversions 
                associated with a trigger index, if write protection is 
                disabled.
   - bctu1_BCTU_DRV_DisableWriteProtect -Disable write protection temporarily 
                or permanently.
   - bctu1_BCTU_DRV_GetConvData -Return the current conversion result data 
                corresponding to an adc instance.
   - bctu1_BCTU_DRV_GetConvResult -Return the full conversion result 
                information corresponding to an adc instance.

Module "osif1"     (component osif)
   - osif1_OSIF_TimeDelay -Delays execution for a number of milliseconds.
   - osif1_OSIF_MutexLock -Waits for a mutex and locks it.
   - osif1_OSIF_MutexUnlock -Unlocks a previously locked mutex.
   - osif1_OSIF_MutexCreate -Create an unlocked mutex.
   - osif1_OSIF_MutexDestroy -Destroys a previously created mutex.
   - osif1_OSIF_SemaWait -Decrement a semaphore with timeout.
   - osif1_OSIF_SemaPost -Increment a semaphore.
   - osif1_OSIF_SemaCreate -Creates a semaphore with a given value.
   - osif1_OSIF_SemaDestroy -Destroys a previously created semaphore.
   - osif1_OSIF_GetMilliseconds -Returns the number of miliseconds elapsed 
                since starting the internal timer or starting the scheduler.

Module "clockMan1" (component clock_manager)
   - clockMan1_CLOCK_SYS_Init -Install pre-defined clock configurations.
   - clockMan1_CLOCK_SYS_UpdateConfiguration -Set system clock configuration 
                according to pre-defined structure.
   - clockMan1_CLOCK_SYS_SetConfiguration -Set system clock configuration.
   - clockMan1_CLOCK_SYS_GetCurrentConfiguration -Get current system clock 
                configuration.
   - clockMan1_CLOCK_SYS_GetErrorCallback -Get the callback which returns error 
                in last clock switch.
   - clockMan1_CLOCK_SYS_GetFreq -Gets the clock frequency for a specific clock 
                name.

Module "pin_mux"   (component PinSettings)
   - pin_mux_PINS_DRV_Init -This function configures the pins with the options 
                provided in the provided structure
   - pin_mux_PINS_DRV_SetPullSel -This function configures the internal resistor
   - pin_mux_PINS_DRV_SetOutputBuffer -This function configures the output 
                buffer
   - pin_mux_PINS_DRV_SetInputBuffer -This function configures the input buffer
   - pin_mux_PINS_DRV_ConfigIntFilterClock -This function configures the 
                interrupt filter clock prescaler
   - pin_mux_PINS_DRV_SetExInt -This function configures the external interrupt
   - pin_mux_PINS_DRV_ClearPinExIntFlag -This function clears the individual 
                pin external interrupt status flag
   - pin_mux_PINS_DRV_GetPinExIntFlag -This function gets the individual pin 
                external interrupt status flag
   - pin_mux_PINS_DRV_ClearExIntFlag -This function clears the entire external 
                interrupt status flag
   - pin_mux_PINS_DRV_GetExIntFlag -This function gets the individual pin 
                external interrupt status flag
   - pin_mux_PINS_DRV_WritePin -This function writes the given pin from a port, 
                with the given value ('0' represents LOW, '1' represents HIGH)
   - pin_mux_PINS_DRV_WritePins -This function writes all pins configured as 
                output with the values given in the parameter pins. '0' 
                represents LOW, '1' represents HIGH
   - pin_mux_PINS_DRV_GetPinsOutput -This function returns the current output 
                that is written to a port. Only pins that are configured as 
                output will have meaningful values
   - pin_mux_PINS_DRV_SetPins -This function configures output pins listed in 
                parameter pins (bits that are '1') to have a value of 'set' 
                (HIGH). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_ClearPins -This function configures output pins listed in 
                parameter pins (bits that are '1') to have a 'cleared' value 
                (LOW). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_TogglePins -This function toggles output pins listed in 
                parameter pins (bits that are '1'). Pins corresponding to '0' 
                will be unaffected
   - pin_mux_PINS_DRV_ReadPins -This function returns the current input values 
                from a port. Only pins configured as input will have meaningful 
                values

Module "Cpu"       (component MPC5748G_176)
   - Cpu_SystemInit -This method configures the oscillator (PLL) that is part 
                of the microcontroller device. SystemInit is called from 
                startup_device file.
   - Cpu_SystemCoreClockUpdate -SystemCoreClockUpdate evaluates the clock 
                register settings and calculates the current core clock.
   - Cpu_SystemSoftwareReset -This method initiates a software rest of the 
                microcontroller.

===================================================================================
