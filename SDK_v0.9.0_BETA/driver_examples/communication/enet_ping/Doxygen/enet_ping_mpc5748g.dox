/*!
    @page enet_ping_mpc5748g_group ENET MPC5748G
    @brief Driver example showing the ENET functionalities

    ## Application description ##
    _____
    The purpose of this driver example is to show you the usage of the ENET module from the MPC5748G CPU using the S32 SDK API.
     - In the first part, the application will setup the board clocks, pins and the ENET module.
     - Then it will toggle a LED in a loop.
     - When a ping request is received from the PC, a response will be built up and sent back to the PC.

    In this example, the MAC address of the board is <b>22-33-44-55-66-77</b> and the IP is <b>192.168.1.19</b>. You can add this entry to your ARP table using the following command:

        arp -s 192.168.1.19 22-33-44-55-66-77 [if_addr]

    Where:
        if_addr: If present, this specifies the Internet address of the
                 interface whose address translation table should be modified.
                 If not present, the first applicable interface will be used.

    Then, you should be able to ping the board from the command line:

        ping 192.168.1.19

    Please note that a prior setting of the IP on your PC might be needed. On Windows, this can be done from:

    <b>Control Panel</b> > <b>Network and Internet</b> > <b>Network Connections</b> > <b>Local Area Connection</b>

    Select <b>Internet Protocol Version 4</b> and click <b>Properties</b>; select <b>Use the following IP address</b> and configure the IP address and subnet mask.
    Configuration example: IP - 192.168.1.5, subnet mask - 255.255.255.0.

    ## Prerequisites ##
    _____
    The run the example you will need to have the following items:
    - 1 MPC5748G board
    - 1 Ethernet cable
    - 1 Power Adapter 12V (if the board cannot be powered from the USB port)
    - 1 Personal Computer
    - 1 PEmicro Debugger (optional, users can use Open SDA)

    ## Boards supported ##
    _____
    The following boards are supported by this application:
    - DEVKIT-MPC5748G
    - MPC574xG-MB

    ## Hardware Wiring ##
    ______
    The following connections must be done to for this example application to work:

    PIN FUNCTION |   DEVKIT-MPC5748G                     |   MPC574xG-MB
    -------------|---------------------------------------|-------------------------------------
        LED      | USER_LED1 (DS9) - wired on the board  | USER_LED1 (DS2) - wired on the board

    ## How to run ##
    _____
    #### 1. Importing the project into the workspace ####
    After opening S32 Design Studio, go to \b File -> \b New \b S32DS \b Project \b From... and select \b enet_ping_mpc5748g. Then click on \b Finish. \n
    The project should now be copied into you current workspace.
    #### 2. Generating the Processor Expert configuration ####
    First go to \b Project \b Explorer View in S32 DS and select the current project(\b enet_ping_mpc5748g). Then go to \b Project and click on \b Generate \b Processor \b Expert \b Code \n
    Wait for the code generation to be completed before continuing to the next step.
    #### 3. Building the project ####
    Select the configuration to be built \b FLASH (Debug_FLASH) or \b RAM (Debug_RAM) by left clicking on the downward arrow corresponding to the \b build button(@image hammer.png).
    Wait for the build action to be completed before continuing to the next step.
    #### 4. Running the project ####
    Go to \b Run and select \b Debug \b Configurations. There will be four debug configurations for this project:
     Configuration Name | Description
     -------------------|------------
     \b enet_ping_mpc5748g_debug_ram_pemicro | Debug the RAM configuration using PEMicro debuggers
     \b enet_ping_mpc5748g_debug_flash_pemicro | Debug the FLASH configuration using PEMicro debuggers
    \n Select the desired debug configuration and click on \b Launch. Now the perspective will change to the \b Debug \b Perspective. \n
    Use the controls to control the program flow.

    @note For more detailed information related to S32 Design Studio usage please consult the available documentation.


*/

