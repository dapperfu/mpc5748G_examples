/*!
    @page phy_autoneg_mpc5748g_group ENET MPC5748G
    @brief Driver example showing the ENET functionalities

    ## Application description ##
    _____
    The purpose of this driver example is to show you the usage of the ENET module from the MPC5748G CPU using the S32 SDK API.
     - In the first part, the application will setup the board clocks, pins, the ENET module and the PHY framework.
     - Then it invoke the PHY main function (checking for PHY events) in a loop.
     - When an event occurs, the corresponding LED will be switched on.

    ## Prerequisites ##
    _____
    The run the example you will need to have the following items:
    - 1 MPC5748G board
    - 1 Ethernet cable
    - 1 Power Adapter 12V (if the board cannot be powered from the USB port)
    - 1 Personal Computer
    - 1 PEmicro Debugger (optional, users can use Open SDA)

    ## Boards supported ##
    _____
    The following boards are supported by this application:
    - DEVKIT-MPC5748G

    ## Hardware Wiring ##
    ______
    The following connections must be done to for this example application to work:

    PIN FUNCTION         |   DEVKIT-MPC5748G
    ---------------------|---------------------------------------
    Autoneg complete LED | USER_LED4 (DS11) - wired on the board
    Autoneg failed LED   | USER_LED3 (DS4) - wired on the board
    Link up LED          | USER_LED2 (DS10) - wired on the board
    Link down LED        | USER_LED5 (DS5) - wired on the board

    ## How to run ##
    _____
    #### 1. Importing the project into the workspace ####
    After opening S32 Design Studio, go to \b File -> \b New \b S32DS \b Project \b From... and select \b phy_autoneg_mpc5748g. Then click on \b Finish. \n
    The project should now be copied into you current workspace.
    #### 2. Generating the Processor Expert configuration ####
    First go to \b Project \b Explorer View in S32 DS and select the current project(\b phy_autoneg_mpc5748g). Then go to \b Project and click on \b Generate \b Processor \b Expert \b Code \n
    Wait for the code generation to be completed before continuing to the next step.
    #### 3. Building the project ####
    Select the configuration to be built \b FLASH (Debug_FLASH) or \b RAM (Debug_RAM) by left clicking on the downward arrow corresponding to the \b build button(@image hammer.png).
    Wait for the build action to be completed before continuing to the next step.
    #### 4. Running the project ####
    Go to \b Run and select \b Debug \b Configurations. There will be four debug configurations for this project:
     Configuration Name | Description
     -------------------|------------
     \b phy_autoneg_mpc5748g_debug_ram_pemicro | Debug the RAM configuration using PEMicro debuggers
     \b phy_autoneg_mpc5748g_debug_flash_pemicro | Debug the FLASH configuration using PEMicro debuggers
    \n Select the desired debug configuration and click on \b Launch. Now the perspective will change to the \b Debug \b Perspective. \n
    Use the controls to control the program flow.

    @note For more detailed information related to S32 Design Studio usage please consult the available documentation.


*/

