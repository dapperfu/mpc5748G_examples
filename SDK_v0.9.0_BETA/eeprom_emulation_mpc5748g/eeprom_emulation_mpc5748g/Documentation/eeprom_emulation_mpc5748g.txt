=============================================================================
List of generated methods in project: eeprom_emulation_mpc5748g

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "intMan1"   (component interrupt_manager)
   - intMan1_INT_SYS_InstallHandler -Installs an interrupt handler routine for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQ -Enables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_DisableIRQ -Disables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQGlobal -Enables system interrupt.
   - intMan1_INT_SYS_DisableIRQGlobal -Disable system interrupt.
   - intMan1_INT_SYS_SetPriority -Set Interrupt Priority.
   - intMan1_INT_SYS_GetPriority -Get Interrupt Priority.
   - intMan1_INT_SYS_SetSoftwareIRQRequest -Set software interrupt request.
   - intMan1_INT_SYS_ClearSoftwareIRQRequest -Clear software interrupt request.
   - intMan1_INT_SYS_EnableIRQ_MC -Enables an interrupt for a given IRQ number, on the given cores.
   - intMan1_INT_SYS_GetCoresForIRQ -Gets the cores on which an interrupt for the specified IRQ number is enabled.
   - intMan1_INT_SYS_DisableIRQ_MC -Disables an interrupt for a given IRQ number, on the given cores.
   - intMan1_INT_SYS_DisableIRQ_MC_All -Disables an interrupt for a given IRQ number, on all cores.

Module "clockMan1" (component clock_manager)
   - clockMan1_CLOCK_SYS_Init -Install pre-defined clock configurations.
   - clockMan1_CLOCK_SYS_UpdateConfiguration -Set system clock configuration according to pre-defined structure.
   - clockMan1_CLOCK_SYS_SetConfiguration -Set system clock configuration.
   - clockMan1_CLOCK_SYS_GetCurrentConfiguration -Get current system clock configuration.
   - clockMan1_CLOCK_SYS_GetErrorCallback -Get the callback which returns error in last clock switch.
   - clockMan1_CLOCK_SYS_GetFreq -Gets the clock frequency for a specific clock name.

Module "eee1"      (component eee)
   - eee1_EEE_DRV_InitEeprom -Initializes the EEE module.
   - eee1_EEE_DRV_WriteEeprom -Write data records into EEPROM emulation.
   - eee1_EEE_DRV_ReadEeprom -Read the requested ID from EEPROM emulation.
   - eee1_EEE_DRV_DeleteRecord -Delete a data record from EEPROM emulation
   - eee1_EEE_DRV_ReportEepromStatus -Report the EEPROM status.
   - eee1_EEE_DRV_RemoveEeprom -Remove the EEPROM emulation.
   - eee1_EEE_DRV_MainFunction -The main function to help completion in swap progress.

Module "flash_c551" (component flash_c55)
   - flash_c551_FLASH_DRV_Init -Initializes the FLASH module.
   - flash_c551_FLASH_DRV_SetLock -Set the block is locked or unlocked state.
   - flash_c551_FLASH_DRV_GetLock -Get the block locking status.
   - flash_c551_FLASH_DRV_Erase -Erase the selected block in the flash memory.
   - flash_c551_FLASH_DRV_BlankCheck -Check the previous erase operation.
   - flash_c551_FLASH_DRV_Program -Program operation in C55 flash.
   - flash_c551_FLASH_DRV_ProgramVerify -Verify the previous program operation.
   - flash_c551_FLASH_DRV_CheckSum -Perform a sum of data integrity in the flash memory range.
   - flash_c551_FLASH_DRV_Suspend -Suspend a operation is being in progress.
   - flash_c551_FLASH_DRV_Resume -Resume the previous suspend operation.
   - flash_c551_FLASH_DRV_Abort -Abort a program or erase operation.
   - flash_c551_FLASH_DRV_GetOverPgmProtStatus -Get the over-program protection status.
   - flash_c551_FLASH_DRV_GetFailedAddress -Get the failing address in memory.
   - flash_c551_FLASH_DRV_ArrayIntegrityCheck -Check the array integrity of the flash memory.
   - flash_c551_FLASH_DRV_ArrayIntegritySuspend -Suspend an on-going array integrity check.
   - flash_c551_FLASH_DRV_ArrayIntegrityResume -Resume the previous suspend operation.
   - flash_c551_FLASH_DRV_UserMarginReadCheck -Check the user margin read of the flash memory.
   - flash_c551_FLASH_DRV_CheckProgramStatus -Check the program operation.
   - flash_c551_FLASH_DRV_CheckEraseStatus -Check the erase operation.
   - flash_c551_FLASH_DRV_CheckUserTestStatus -Check the operation in user test mode.
   - flash_c551_FLASH_DRV_EnableCmdCompleteInterupt -Allow to enable the command complete interrupt is generated when a program 
                erase complete or suspend program, erase.
   - flash_c551_FLASH_DRV_DisableCmdCompleteInterupt -Disable the command program, erase, suspend complete interrupt.

Module "pin_mux"   (component PinSettings)
   - pin_mux_PINS_DRV_Init -This function configures the pins with the options provided in the provided structure
   - pin_mux_PINS_DRV_SetPullSel -This function configures the internal resistor
   - pin_mux_PINS_DRV_SetOutputBuffer -This function configures the output buffer
   - pin_mux_PINS_DRV_SetInputBuffer -This function configures the input buffer
   - pin_mux_PINS_DRV_ConfigIntFilterClock -This function configures the interrupt filter clock prescaler
   - pin_mux_PINS_DRV_SetExInt -This function configures the external interrupt
   - pin_mux_PINS_DRV_ClearPinExIntFlag -This function clears the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_GetPinExIntFlag -This function gets the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_ClearExIntFlag -This function clears the entire external interrupt status flag
   - pin_mux_PINS_DRV_GetExIntFlag -This function gets the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_WritePin -This function writes the given pin from a port, with the given value ('0' represents LOW, '1' 
                represents HIGH)
   - pin_mux_PINS_DRV_WritePins -This function writes all pins configured as output with the values given in the parameter pins.
                '0' represents LOW, '1' represents HIGH
   - pin_mux_PINS_DRV_GetPinsOutput -This function returns the current output that is written to a port. Only pins that are 
                configured as output will have meaningful values
   - pin_mux_PINS_DRV_SetPins -This function configures output pins listed in parameter pins (bits that are '1') to have a 
                value of 'set' (HIGH). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_ClearPins -This function configures output pins listed in parameter pins (bits that are '1') to have a 
                'cleared' value (LOW). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_TogglePins -This function toggles output pins listed in parameter pins (bits that are '1'). Pins 
                corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_ReadPins -This function returns the current input values from a port. Only pins configured as input will 
                have meaningful values

Module "Cpu"       (component MPC5748G_176)
   - Cpu_SystemInit -This method configures the oscillator (PLL) that is part of the microcontroller device. SystemInit is 
                called from startup_device file.
   - Cpu_SystemCoreClockUpdate -SystemCoreClockUpdate evaluates the clock register settings and calculates the current core 
                clock.
   - Cpu_SystemSoftwareReset -This method initiates a software rest of the microcontroller.

===================================================================================
