=============================================================================
List of generated methods in project: swt_interrupt_mpc5748g

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "intMan1"   (component interrupt_manager)
   - intMan1_INT_SYS_InstallHandler -Installs an interrupt handler routine for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQ -Enables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_DisableIRQ -Disables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQGlobal -Enables system interrupt.
   - intMan1_INT_SYS_DisableIRQGlobal -Disable system interrupt.
   - intMan1_INT_SYS_SetPriority -Set Interrupt Priority.
   - intMan1_INT_SYS_GetPriority -Get Interrupt Priority.
   - intMan1_INT_SYS_SetSoftwareIRQRequest -Set software interrupt request.
   - intMan1_INT_SYS_ClearSoftwareIRQRequest -Clear software interrupt request.
   - intMan1_INT_SYS_EnableIRQ_MC -Enables an interrupt for a given IRQ number, on the given cores.
   - intMan1_INT_SYS_GetCoresForIRQ -Gets the cores on which an interrupt for the specified IRQ number is enabled.
   - intMan1_INT_SYS_DisableIRQ_MC -Disables an interrupt for a given IRQ number, on the given cores.
   - intMan1_INT_SYS_DisableIRQ_MC_All -Disables an interrupt for a given IRQ number, on all cores.

Module "clockMan1" (component clock_manager)
   - clockMan1_CLOCK_SYS_Init -Install pre-defined clock configurations.
   - clockMan1_CLOCK_SYS_UpdateConfiguration -Set system clock configuration according to pre-defined structure.
   - clockMan1_CLOCK_SYS_SetConfiguration -Set system clock configuration.
   - clockMan1_CLOCK_SYS_GetCurrentConfiguration -Get current system clock configuration.
   - clockMan1_CLOCK_SYS_GetErrorCallback -Get the callback which returns error in last clock switch.
   - clockMan1_CLOCK_SYS_GetFreq -Gets the clock frequency for a specific clock name.

Module "pin_mux"   (component PinSettings)
   - pin_mux_PINS_DRV_Init -This function configures the pins with the options provided in the provided structure
   - pin_mux_PINS_DRV_SetPullSel -This function configures the internal resistor
   - pin_mux_PINS_DRV_SetOutputBuffer -This function configures the output buffer
   - pin_mux_PINS_DRV_SetInputBuffer -This function configures the input buffer
   - pin_mux_PINS_DRV_ConfigIntFilterClock -This function configures the interrupt filter clock prescaler
   - pin_mux_PINS_DRV_SetExInt -This function configures the external interrupt
   - pin_mux_PINS_DRV_ClearPinExIntFlag -This function clears the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_GetPinExIntFlag -This function gets the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_ClearExIntFlag -This function clears the entire external interrupt status flag
   - pin_mux_PINS_DRV_GetExIntFlag -This function gets the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_WritePin -This function writes the given pin from a port, with the given value ('0' represents LOW, '1' 
                represents HIGH)
   - pin_mux_PINS_DRV_WritePins -This function writes all pins configured as output with the values given in the parameter pins.
                '0' represents LOW, '1' represents HIGH
   - pin_mux_PINS_DRV_GetPinsOutput -This function returns the current output that is written to a port. Only pins that are 
                configured as output will have meaningful values
   - pin_mux_PINS_DRV_SetPins -This function configures output pins listed in parameter pins (bits that are '1') to have a 
                value of 'set' (HIGH). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_ClearPins -This function configures output pins listed in parameter pins (bits that are '1') to have a 
                'cleared' value (LOW). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_TogglePins -This function toggles output pins listed in parameter pins (bits that are '1'). Pins 
                corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_ReadPins -This function returns the current input values from a port. Only pins configured as input will 
                have meaningful values

Module "swt1"      (component swt)
   - swt1_SWT_DRV_LockConfig -Lock SWT registers. This function locks the SWT register. When locked, the SWT_CR, SWT_TO, SWT_WN 
                and SWT_SK registers are read-only.
   - swt1_SWT_DRV_Init -Initializes the SWT instance. This function initializes the SWT instance by user configuration. Ensure 
                that the SIRC clock gate is enabled.
   - swt1_SWT_DRV_GetDefaultConfig -Gets the default configuration of the SWT. This function gets the default configuration of 
                the SWT.
   - swt1_SWT_DRV_Deinit -De-initializes the SWT instance. This function resets all configuration to default and disable the 
                SWT instance.
   - swt1_SWT_DRV_SetServiceConfig -Sets service mode. This function sets service mode and sets initial service key if in Keyed 
                Service Mode. This function will unlock the SWT configuration.
   - swt1_SWT_DRV_Service -Services the SWT. This function resets the SWT counter in fixed service sequence and keyed service 
                sequence modes.    - Fixed Service Sequence Mode: write fixed keys.    - Keyed Service Sequence Mode: write 
                pseudo random keys (17*SK+3) mod 2^16.
   - swt1_SWT_DRV_SetIntConfig -Sets timeout interrupt. This function enables/disables the SWT timeout interrupt. This function 
                will unlock the SWT configuration.
   - swt1_SWT_DRV_ClearIntFlag -Clears the Timeout Interrupt Flag. This function clears the Timeout Interrupt Flag.
   - swt1_SWT_DRV_GetIntStatus -Gets the Timeout Interrupt Status. This function gets the Timeout Interrupt Status.
   - swt1_SWT_DRV_SetTimeoutValue -Sets timeout value. This function sets timeout value. This function will unlock the SWT 
                configuration.
   - swt1_SWT_DRV_SetWindowConfig -Sets window mode. This function enables/disables window mode and sets window value if 
                enabled.
   - swt1_SWT_DRV_GetCounterValue -Gets the value of the SWT counter. This function gets the value of the SWT counter. When the 
                watchdog is disabled (SWT_CR[WEN] is 0), this field shows the value of the internal down counter. When the 
                watchdog is enabled (SWT_CR[WEN] is 1), this field is cleared (the value is 0x0000_0000). Values in this field 
                can lag behind the internal counter value for up to 6 system clock cycles plus 8 counter clock cycles. 
                Therefore, the value read from this field immediately after disabling the watchdog may be higher than the 
                actual value of the internal counter. The SWT timer should be stopped before calling this function.
   - swt1_SWT_DRV_StartTimer -Enables the SWT timer. This function enables the SWT timer. This function will unlock the SWT 
                configuration.
   - swt1_SWT_DRV_StopTimer -Disables the SWT timer. This function disables the SWT timer. This function will unlock the SWT 
                configuration.

Module "Cpu"       (component MPC5748G_176)
   - Cpu_SystemInit -This method configures the oscillator (PLL) that is part of the microcontroller device. SystemInit is 
                called from startup_device file.
   - Cpu_SystemCoreClockUpdate -SystemCoreClockUpdate evaluates the clock register settings and calculates the current core 
                clock.
   - Cpu_SystemSoftwareReset -This method initiates a software rest of the microcontroller.

===================================================================================
