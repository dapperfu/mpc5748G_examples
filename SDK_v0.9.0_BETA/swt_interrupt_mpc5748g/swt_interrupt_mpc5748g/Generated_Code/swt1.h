/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : swt1.h
**     Project     : swt_interrupt_mpc5748g
**     Processor   : MPC5748G_176
**     Component   : swt
**     Version     : Component SDK_MPC574x_04, Driver 01.00, CPU db: 3.00.000
**     Repository  : SDK_MPC574x_04
**     Compiler    : GNU C Compiler
**     Date/Time   : 2018-04-30, 21:04, # CodeGen: 0
**     Contents    :
**         SWT_DRV_LockConfig       - status_t SWT_DRV_LockConfig(uint32_t instance, swt_lock_t lockConfig);
**         SWT_DRV_Init             - status_t SWT_DRV_Init(uint32_t instance, const swt_user_config_t * const...
**         SWT_DRV_GetDefaultConfig - void SWT_DRV_GetDefaultConfig(swt_user_config_t * const config);
**         SWT_DRV_Deinit           - status_t SWT_DRV_Deinit(uint32_t instance);
**         SWT_DRV_SetServiceConfig - status_t SWT_DRV_SetServiceConfig(uint32_t instance, swt_service_mode_t mode,...
**         SWT_DRV_Service          - void SWT_DRV_Service(uint32_t instance);
**         SWT_DRV_SetIntConfig     - status_t SWT_DRV_SetIntConfig(uint32_t instance, bool enable);
**         SWT_DRV_ClearIntFlag     - void SWT_DRV_ClearIntFlag(uint32_t instance);
**         SWT_DRV_GetIntStatus     - bool SWT_DRV_GetIntStatus(uint32_t instance);
**         SWT_DRV_SetTimeoutValue  - status_t SWT_DRV_SetTimeoutValue(uint32_t instance, uint32_t value);
**         SWT_DRV_SetWindowConfig  - status_t SWT_DRV_SetWindowConfig(uint32_t instance, bool enable, uint32_t...
**         SWT_DRV_GetCounterValue  - status_t SWT_DRV_GetCounterValue(uint32_t instance, uint32_t * value);
**         SWT_DRV_StartTimer       - status_t SWT_DRV_StartTimer(uint32_t instance);
**         SWT_DRV_StopTimer        - status_t SWT_DRV_StopTimer(uint32_t instance);
**
**     Copyright 1997 - 2015 Freescale Semiconductor, Inc.
**     Copyright 2016-2017 NXP
**     All Rights Reserved.
**     
**     THIS SOFTWARE IS PROVIDED BY NXP "AS IS" AND ANY EXPRESSED OR
**     IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
**     OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
**     IN NO EVENT SHALL NXP OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
**     INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
**     SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
**     HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
**     STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
**     IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
**     THE POSSIBILITY OF SUCH DAMAGE.
** ###################################################################*/
/*!
** @file swt1.h
** @version 01.00
*/
/*!
**  @addtogroup swt1_module swt1 module documentation
**  @{
*/
#ifndef swt1_H
#define swt1_H

/* MODULE swt1.
 *
 * @page misra_violations MISRA-C:2012 violations
 *
 * @section [global]
 * Violates MISRA 2012 Advisory Rule 2.5, Global macro not referenced.
 * The global macro will be used in function call of the module.
 */

/* Include inherited beans */
#include "clockMan1.h"
#include "Cpu.h"
#include "swt_driver.h"

/*! @brief Device instance number */
#define INST_SWT1 (0U)

/*! @brief Number of user configuration */
#define SWT1_NUM_OF_USER_CFG (1U)

/*! @brief User configuration */
extern const swt_user_config_t swt1_Config0;

#endif
/* ifndef swt1_H */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.1 [05.21]
**     for the NXP C55 series of microcontrollers.
**
** ###################################################################
*/
