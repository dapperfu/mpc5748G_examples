/*!
    @page usb_cdc_lwip_mpc5748g_group USB CDC LWIP MPC5748G
    @brief Basic S32 SDK application that uses LWIP to respond to ping and also to test the speed of the TCP/IP stack over an USB port.
    ## Application description ##
    _____
    The purpose of this demo is to provide the user with an out-of-the box example application for MPC57xx platform, using S32 SDK.
    The demo runs several FATFS filesystem tests.

    ## Prerequisites ##
    ______
    The run the example you will need to have the following items:
    - 1 MPC5748G board
    - 1 Power Adapter 12V (if the board cannot be powered from the USB port)
    - 1 Personal Computer
    - 1 PE Micro, 1 USB Type B cable or 1 T32 Power View, 1 Power Adapter 7.5V, 1 USB Type B cable, 1 T32 debug interface, 1 T32 debug cable for MPC5500
    - One USB CDC-ECM compatible device. I.e.: TP Link UE-300, I.MX6 board, generic Linux distribution installed on a device with USB ports.

    ## Boards supported ##
    ______
    The following boards are supported by this application:
    - MPC574xG main board with daughter card. The processor's version has be at least cut3.0: 0N78S.

    ## Hardware Wiring ##

    ## How to run ##
  ______

    #### 1. Importing the project into the workspace ####
    After opening S32 Design Studio, go to \b File -> \b New \b S32DS \b Project \b From... and select \b usb_cdc_lwip_mpc5748g. Then click on \b Finish. \n
    The project should now be copied into you current workspace.
    #### 2. Generating the Processor Expert configuration ####
    First go to \b Project \b Explorer View in S32 DS and select the current project(\b usb_msd_mpc5748g). Then go to \b Project and click on \b Generate \b Processor \b Expert \b Code \n
    Wait for the code generation to be completed before continuing to the next step.
    #### 3. Building the project ####
    Select the configuration to be built \b FLASH (Debug_FLASH) by left clicking on the downward arrow corresponding to the \b build button(@image hammer.png).
    Wait for the build action to be completed before continuing to the next step.
    #### 4. Running the project ####
    Go to \b Run and select \b Debug \b Configurations. There will be four debug configurations for this project:
     Configuration Name | Description
     -------------------|------------
    \b usb_cdc_lwip_mpc5748g \b debug_flash \b pemicro | Debug the FLASH configuration using PEMicro debuggers
    \n Select the desired debug configuration and click on \b Launch. Now the perspective will change to the \b Debug \b Perspective. \n
	### 5. Set up your serial monitor with the following configuration:
		baudRate = 115200
		parityCheck = false
		parityType = LINFLEXD_UART_PARITY_EVEN
		stopBitsCount = LINFLEXD_UART_ONE_STOP_BIT
		wordLength = LINFLEXD_UART_8_BITS

	### 6. Connect your USB CDC-ECM device to the USB port.
	### 7. Configure the USB CDC-ECM device. This is a generic step considering that this example runs with multiple devices. Further, it will be detailed how to connect a TP-Link UE300.
	### 8.1 Connect the TP Link UE300 to the board. Connect an ethernet cable to the TP Link device. The other end of the ethernet cable should be connected to the PC.
	### 8.2 Configure the IP address if the ethernet interface with an IP address from the 192.168.2.0/24 subnet mask. Keep in mind that 192.168.2.1 is the default IP address of the board.
	### 9. Ping the device or start an iperf session.
	### 10. Expected results:
			- board should respond to ping
			- iperf should report the amount of data transferred and the throughput.

    @note For more detailed information related to S32 Design Studio usage please consult the available documentation.
	@note For more detailed information related to this example, please check the USB user manual. You can find it in the /middleware/usb/documentation folder.
*/
