=============================================================================
List of generated methods in project: wkpu_interrupt_mpc5748g

This text description is generated by Processor Expert. Do not modify it.
=============================================================================

Module "intMan1"   (component interrupt_manager)
   - intMan1_INT_SYS_InstallHandler -Installs an interrupt handler routine for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQ -Enables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_DisableIRQ -Disables an interrupt for a given IRQ number.
   - intMan1_INT_SYS_EnableIRQGlobal -Enables system interrupt.
   - intMan1_INT_SYS_DisableIRQGlobal -Disable system interrupt.
   - intMan1_INT_SYS_SetPriority -Set Interrupt Priority.
   - intMan1_INT_SYS_GetPriority -Get Interrupt Priority.
   - intMan1_INT_SYS_SetSoftwareIRQRequest -Set software interrupt request.
   - intMan1_INT_SYS_ClearSoftwareIRQRequest -Clear software interrupt request.
   - intMan1_INT_SYS_EnableIRQ_MC -Enables an interrupt for a given IRQ number, on the given cores.
   - intMan1_INT_SYS_GetCoresForIRQ -Gets the cores on which an interrupt for the specified IRQ number is enabled.
   - intMan1_INT_SYS_DisableIRQ_MC -Disables an interrupt for a given IRQ number, on the given cores.
   - intMan1_INT_SYS_DisableIRQ_MC_All -Disables an interrupt for a given IRQ number, on all cores.

Module "wkpu1"     (component wkpu)
   - wkpu1_WKPU_DRV_InitNMI -This function sets the NMI configuration.
   - wkpu1_WKPU_DRV_DeinitNMI -This function de-initializes NMI of the WKPU module. Reset NMI configuration, disable Wake-up, 
                clear filter enable, edge events enable
   - wkpu1_WKPU_DRV_GetNMIDefaultConfig -This function gets NMI default configuration. Note that: The user need provides an 
                array have 3 elements of NMI configuration
   - wkpu1_WKPU_DRV_ClearNMIFlag -This function clears the NMI (status or overrun) flag for each core
   - wkpu1_WKPU_DRV_InitInterrupt -This function initializes interrupt WKPU driver based on user configuration input. The 
                channelCnt takes values between 1 and the maximum channel count supported by the hardware
   - wkpu1_WKPU_DRV_DeinitInterrupt -This function de-initializes the interrupt WKPU module. Reset interrupt configuration, 
                disable IRQ and Wake-up, clear filter enable, pull-up enable, edge events enable.
   - wkpu1_WKPU_DRV_GetInterruptDefaultConfig -This function gets interrupt default configuration. Note that: The user need 
                provides an array have 32 elements of interrupt configuration
   - wkpu1_WKPU_DRV_SetInterruptConfig -This function sets the interrupt configuration based on interrupt configuration input
   - wkpu1_WKPU_DRV_ClearInterruptConfig -This function clears interrupt configuration, disable IRQ and Wake-up, clear filter 
                enable, pull-up enable, edge events enable
   - wkpu1_WKPU_DRV_SetInterruptNormalMode -This function sets normal mode for the WKPU, enable interrupt and wake-up
   - wkpu1_WKPU_DRV_SetInterruptSleepMode -This function sets sleep mode for the WKPU or disable interrupt and wake-up
   - wkpu1_WKPU_DRV_SetInterruptEdgeEvent -This function sets edge events for each channel of the WKPU
   - wkpu1_WKPU_DRV_ClearInterruptFlag -This function clears interrupt flag for channel mask
   - wkpu1_WKPU_DRV_InitReset -This function sets reset configuration of the WKPU based on reset configuration input
   - wkpu1_WKPU_DRV_DeinitReset -This function de-initializes the Reset WKPU module. Reset configuration, disable Wake-up, edge 
                events enable and lock enable.
   - wkpu1_WKPU_DRV_GetResetDefaultConfig -This function gets Reset default configuration
   - wkpu1_WKPU_DRV_ClearResetFlag -This function clears the reset (status or overrun) flag

Module "stm1"      (component stm)
   - stm1_STM_DRV_Init -Initializes the STM module
   - stm1_STM_DRV_Deinit -De-Initializes the STM module
   - stm1_STM_DRV_GetDefaultConfig -Gets the default configuration structure of STM with default settings
   - stm1_STM_DRV_InitChannel -Initializes the STM channel module with a structure
   - stm1_STM_DRV_ConfigChannel -Configures the STM channel module with parameters
   - stm1_STM_DRV_EnableChannel -Enables the channel selected
   - stm1_STM_DRV_DisableChannel -Disables the channel selected
   - stm1_STM_DRV_SetStartValueCount -Sets start-value for Counter register
   - stm1_STM_DRV_StartTimer -Starts timer counter
   - stm1_STM_DRV_StopTimer -Stops timer counter
   - stm1_STM_DRV_ComputeTicksByUs -Computes the number of ticks from microseconds
   - stm1_STM_DRV_IncrementTicks -Increases the number of ticks in compare register
   - stm1_STM_DRV_GetStatusFlags -Gets status of timer interrupt flag
   - stm1_STM_DRV_ClearStatusFlags -Clears channel interrupt flag
   - stm1_STM_DRV_GetCounterValue -Gets current counter module

Module "pwrMan1"   (component power_manager)
   - pwrMan1_POWER_SYS_Init -Power manager initialization for operation.
   - pwrMan1_POWER_SYS_Deinit -This function deinitializes the Power manager.
   - pwrMan1_POWER_SYS_SetMode -This function configures the power mode.
   - pwrMan1_POWER_SYS_GetLastMode -This function returns the last successfully set power mode.
   - pwrMan1_POWER_SYS_GetLastModeConfig -This function returns the user configuration structure of the last successfully set 
                power mode.
   - pwrMan1_POWER_SYS_GetCurrentMode -This function returns currently running power mode.
   - pwrMan1_POWER_SYS_GetErrorCallbackIndex -This function returns the last failed notification callback.
   - pwrMan1_POWER_SYS_GetErrorCallback -This function returns the callback configuration structure for the last failed 
                notification.
   - pwrMan1_POWER_SYS_GetPreviousMode -This function returns previous mode where the chip jumped from lastest mode to current 
                mode.           STANDBY mode is not returned because of register controller is disabled when the chip enter 
                STANDBY mode

Module "pin_mux"   (component PinSettings)
   - pin_mux_PINS_DRV_Init -This function configures the pins with the options provided in the provided structure
   - pin_mux_PINS_DRV_SetPullSel -This function configures the internal resistor
   - pin_mux_PINS_DRV_SetOutputBuffer -This function configures the output buffer
   - pin_mux_PINS_DRV_SetInputBuffer -This function configures the input buffer
   - pin_mux_PINS_DRV_ConfigIntFilterClock -This function configures the interrupt filter clock prescaler
   - pin_mux_PINS_DRV_SetExInt -This function configures the external interrupt
   - pin_mux_PINS_DRV_ClearPinExIntFlag -This function clears the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_GetPinExIntFlag -This function gets the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_ClearExIntFlag -This function clears the entire external interrupt status flag
   - pin_mux_PINS_DRV_GetExIntFlag -This function gets the individual pin external interrupt status flag
   - pin_mux_PINS_DRV_WritePin -This function writes the given pin from a port, with the given value ('0' represents LOW, '1' 
                represents HIGH)
   - pin_mux_PINS_DRV_WritePins -This function writes all pins configured as output with the values given in the parameter pins.
                '0' represents LOW, '1' represents HIGH
   - pin_mux_PINS_DRV_GetPinsOutput -This function returns the current output that is written to a port. Only pins that are 
                configured as output will have meaningful values
   - pin_mux_PINS_DRV_SetPins -This function configures output pins listed in parameter pins (bits that are '1') to have a 
                value of 'set' (HIGH). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_ClearPins -This function configures output pins listed in parameter pins (bits that are '1') to have a 
                'cleared' value (LOW). Pins corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_TogglePins -This function toggles output pins listed in parameter pins (bits that are '1'). Pins 
                corresponding to '0' will be unaffected
   - pin_mux_PINS_DRV_ReadPins -This function returns the current input values from a port. Only pins configured as input will 
                have meaningful values

Module "clockMan1" (component clock_manager)
   - clockMan1_CLOCK_SYS_Init -Install pre-defined clock configurations.
   - clockMan1_CLOCK_SYS_UpdateConfiguration -Set system clock configuration according to pre-defined structure.
   - clockMan1_CLOCK_SYS_SetConfiguration -Set system clock configuration.
   - clockMan1_CLOCK_SYS_GetCurrentConfiguration -Get current system clock configuration.
   - clockMan1_CLOCK_SYS_GetErrorCallback -Get the callback which returns error in last clock switch.
   - clockMan1_CLOCK_SYS_GetFreq -Gets the clock frequency for a specific clock name.

Module "Cpu"       (component MPC5748G_176)
   - Cpu_SystemInit -This method configures the oscillator (PLL) that is part of the microcontroller device. SystemInit is 
                called from startup_device file.
   - Cpu_SystemCoreClockUpdate -SystemCoreClockUpdate evaluates the clock register settings and calculates the current core 
                clock.
   - Cpu_SystemSoftwareReset -This method initiates a software rest of the microcontroller.

===================================================================================
