/* ###################################################################
**     This component module is generated by Processor Expert. Do not modify it.
**     Filename    : stm1.h
**     Project     : wkpu_interrupt_mpc5748g
**     Processor   : MPC5748G_176
**     Component   : stm
**     Version     : Component SDK_MPC574x_04, Driver 01.00, CPU db: 3.00.000
**     Repository  : SDK_MPC574x_04
**     Compiler    : GNU C Compiler
**     Date/Time   : 2018-04-30, 18:05, # CodeGen: 0
**     Contents    :
**         STM_DRV_Init               - void STM_DRV_Init(const uint32_t instance, const stm_config_t * const config);
**         STM_DRV_Deinit             - void STM_DRV_Deinit(const uint32_t instance);
**         STM_DRV_GetDefaultConfig   - void STM_DRV_GetDefaultConfig(stm_config_t * const config);
**         STM_DRV_InitChannel        - void STM_DRV_InitChannel(const uint32_t instance, const stm_channel_config_t...
**         STM_DRV_ConfigChannel      - void STM_DRV_ConfigChannel(const uint32_t instance, const uint8_t channel,...
**         STM_DRV_EnableChannel      - void STM_DRV_EnableChannel(const uint32_t instance, const uint8_t channel);
**         STM_DRV_DisableChannel     - void STM_DRV_DisableChannel(const uint32_t instance, const uint8_t channel);
**         STM_DRV_SetStartValueCount - void STM_DRV_SetStartValueCount(const uint32_t instance, const uint32_t...
**         STM_DRV_StartTimer         - void STM_DRV_StartTimer(const uint32_t instance);
**         STM_DRV_StopTimer          - void STM_DRV_StopTimer(const uint32_t instance);
**         STM_DRV_ComputeTicksByUs   - status_t STM_DRV_ComputeTicksByUs(const uint32_t instance, const uint32_t...
**         STM_DRV_IncrementTicks     - void STM_DRV_IncrementTicks(const uint32_t instance, const uint8_t channel,...
**         STM_DRV_GetStatusFlags     - uint32_t STM_DRV_GetStatusFlags(const uint32_t instance, const uint8_t channel);
**         STM_DRV_ClearStatusFlags   - void STM_DRV_ClearStatusFlags(const uint32_t instance, const uint8_t channel);
**         STM_DRV_GetCounterValue    - uint32_t STM_DRV_GetCounterValue(const uint32_t instance);
**
**     Copyright 1997 - 2015 Freescale Semiconductor, Inc.
**     Copyright 2016-2017 NXP
**     All Rights Reserved.
**     
**     THIS SOFTWARE IS PROVIDED BY NXP "AS IS" AND ANY EXPRESSED OR
**     IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
**     OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
**     IN NO EVENT SHALL NXP OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
**     INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
**     (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
**     SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
**     HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
**     STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
**     IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
**     THE POSSIBILITY OF SUCH DAMAGE.
** ###################################################################*/
/*!
** @file stm1.h
** @version 01.00
*/
/*!
**  @addtogroup stm1_module stm1 module documentation
**  @{
*/
#ifndef stm1_H
#define stm1_H

/* MODULE stm1.
 *
 * @page misra_violations MISRA-C:2012 violations
 *
 * @section [global]
 * Violates MISRA 2012 Advisory Rule 2.5, Global macro not referenced.
 * The global macro will be used in function call of the module.
 */

/* Include inherited beans */
#include "clockMan1.h"
#include "Cpu.h"
#include "stm_driver.h"


/*! Device instance number */
#define INST_STM1 (0U)

/*! Global configuration 0 of stm1 */
extern const stm_config_t stm1_InitConfig0;

/*! User channel configuration 0 of stm1 */
extern const stm_channel_config_t stm1_ChnConfig0;

#endif
/* END stm1 */
/*!
** @}
*/
/*
** ###################################################################
**
**     This file was created by Processor Expert 10.1 [05.21]
**     for the NXP C55 series of microcontrollers.
**
** ###################################################################
*/

